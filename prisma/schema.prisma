// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  email          String  @unique
  emailConfirmed Boolean @default(false)
  password       String
  firstName      String
  lastName       String

  inches Int?
  lbs    Int?
  DOB    DateTime?
  gender Gender?

  Workouts      Workout[]
  Badges        Badge[]
  Notifications Notification[]
}

model Notification {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  message     String
  unread      Boolean  @default(true)
  open        Boolean  @default(true)
  dismissable Boolean  @default(true)
  buttonUrl   String?

  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model WorkoutType {
  id        String    @id @default(uuid())
  name      String
  sortOrder Int       @default(100)
  Workouts  Workout[]
}

model Workout {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  location String?
  start    DateTime @default(now())
  end      DateTime @default(now())
  distance Decimal? @default(0)
  steps    Int?     @default(0)
  calories Int?     @default(0)
  notes    String?

  userId String
  user   User   @relation(fields: [userId], references: [id])

  workoutTypeId String
  workoutType   WorkoutType @relation(fields: [workoutTypeId], references: [id])
}

model Badge {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type  String?
  notes String?

  userId String
  user   User   @relation(fields: [userId], references: [id])
}
